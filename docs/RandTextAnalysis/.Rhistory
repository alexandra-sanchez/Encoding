install.packages("learnr")
## Packages are groups of functions that you can use.
## We are putting the following packages into the Library to use.
library("RDSTK")
## Packages are groups of functions that you can use.
## We are putting the following packages into the Library to use.
library("RDSTK")
??syuzhet
??twitteR
library("RDSTK")
library("readr")
library("qdap")
library("syuzhet")
library("ggplot2")
library("dplyr")
library(dplyr)
library(qdap)
library(RDSTK)
library(readr)
library(syuzhet)
library(ggplot2)
install.packages(c("lattice", "nlme", "survival"))
library("RDSTK")
library("readr")
library("qdap")
library("syuzhet")
library("ggplot2")
library("dplyr")
library(dplyr)
library(ggplot2)
library(qdap)
library(qdapDictionaries)
library(qdapRegex)
library(qdapTools)
library(readr)
library(RDSTK)
library(syuzhet)
install.packages("learnr")
require(qdap)
library("readr")
library("RDSTK")
library("readr")
library("qdap")
library("syuzhet")
library("ggplot2")
library("dplyr")
gandhi_speech = read_file("assets/gandhi_speech2.txt")
setwd("~/GitHub/Encoding/docs/RandTextAnalysis")
gandhi_speech = read_file("assets/gandhi_speech2.txt")
View(gandhi_speech)
g_scores = get_nrc_sentiment(gandhi_speech)
class(g_scores)
g_scores
g_polarity = g_scores[1,9:10]
g_sentiment = g_scores[1,1:8]
class(g_polarity)
g_polarity = data.matrix(g_polarity, rownames.force = TRUE)
barplot(g_polarity)
library(devtools)
library(SnowballC)
library(tm)
library(wordcloud)
library("devtools")
library("RColorBrewer")
library("tm")
library("SnowballC")
library("wordcloud")
wordcloud(gandhi_speech,colors=c("blue","green"))
douglass = read_file("assets/douglass.txt")
View(douglass)
wordcloud(douglass,colors=c("blue","green"))
install.packages("tm")
library(tm)
mycorpus <- VCorpus(x = VectorSource(trump$text),
readerControl = list(reader=readPlain,
language="en"))
mycorpus <- tm_map(mycorpus, removeWords, stopwords())
install.packages("tm")
wordcloud(douglass,colors=c("blue","green"))
library(devtools)
library(dplyr)
library(ggplot2)
library(qdap)
library(readr)
library(RDSTK)
library(tm)
library(syuzhet)
library(SnowballC)
library(wordcloud)
wordcloud(douglass,colors=c("blue","green"))
sentiment_vector = get_sentiment(g_speech_sen, method = "syuzhet")
wordcloud(douglass,colors=c("blue","green"))
library("devtools")
library("RColorBrewer")
library("tm")
library("SnowballC")
library("wordcloud")
## we now have an index - what can we do with this?
most_positive = sentence_sentiment[which.max(sentence_sentiment$sentiment_vector),]
g_scores = get_nrc_sentiment(douglass)
class(g_scores)
g_scores
g_polarity = g_scores[1,9:10]
g_sentiment = g_scores[1,1:8]
class(g_polarity)
g_polarity = data.matrix(g_polarity, rownames.force = TRUE)
barplot(g_polarity)
class(g_sentiment)
g_sentiment = data.matrix(g_sentiment, rownames.force = TRUE)
barplot(g_sentiment)
g_speech_sen = get_sentences(douglass)
g_speech_sen
g_speech_sen = get_sentences(douglass)
g_speech_sen
sentiment_vector = get_sentiment(g_speech_sen, method = "syuzhet")
sentiment_vector
summary(sentiment_vector)
boxplot(sentiment_vector)
max(sentiment_vector)
sentence_sentiment = data.frame(g_speech_sen, sentiment_vector)
View(sentence_sentiment)
which.max(sentence_sentiment$sentiment_vector)
most_positive = sentence_sentiment[which.max(sentence_sentiment$sentiment_vector),]
wordcloud(douglass,colors=c("blue","green"))
douglass = read_file("assets/douglass.txt")
View(douglass)
g_scores = get_nrc_sentiment(douglass)
class(g_scores)
g_scores
g_polarity = g_scores[1,9:10]
g_sentiment = g_scores[1,1:8]
class(g_polarity)
g_polarity = data.matrix(g_polarity, rownames.force = TRUE)
barplot(g_polarity)
class(g_sentiment)
g_sentiment = data.matrix(g_sentiment, rownames.force = TRUE)
barplot(g_sentiment)
g_speech_sen = get_sentences(douglass)
g_speech_sen
sentiment_vector = get_sentiment(g_speech_sen, method = "syuzhet")
sentiment_vector
summary(sentiment_vector)
boxplot(sentiment_vector)
max(sentiment_vector)
sentence_sentiment = data.frame(g_speech_sen, sentiment_vector)
View(sentence_sentiment)
which.max(sentence_sentiment$sentiment_vector)
most_positive = sentence_sentiment[which.max(sentence_sentiment$sentiment_vector),]
library("devtools")
library("RColorBrewer")
library("tm")
library("SnowballC")
library("wordcloud")
wordcloud(douglass,colors=c("blue","green"))
?wordcloud
wordcloud(douglass,colors=c("blue","green"), max.words = 50)
wordcloud(douglass,colors=(), max.words = 50)
wordcloud(douglass, max.words = 50)
wordcloud(douglass, colors, max.words = 50)
wordcloud(douglass, colors = all  , max.words = 50)
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 50)
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 50, (min.freq = 10))
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 50)
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 75)
, "yellow", "green") , max.words = 75)
tm_map(abs, removeWords, stopwords("english"))
install.packages("abs")
install.packages("removeWords")
install.packages("stopwords")
install.packages("abs")
install.packages("removeWords")
install.packages("stopwords")
library(stopwords)
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 75)
tm_map(stopwords("english"))
colors = c("red", "yellow", "green") , max.words = 75)
tm(stopwords("english"))
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 75)
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 75)
douglass = read_file("assets/douglass.txt")
View(douglass)
g_scores = get_nrc_sentiment(douglass)
class(g_scores)
g_scores
g_polarity = g_scores[1,9:10]
g_sentiment = g_scores[1,1:8]
class(g_polarity)
g_polarity = data.matrix(g_polarity, rownames.force = TRUE)
barplot(g_polarity)
class(g_sentiment)
g_sentiment = data.matrix(g_sentiment, rownames.force = TRUE)
barplot(g_sentiment)
g_speech_sen = get_sentences(douglass)
g_speech_sen
sentiment_vector = get_sentiment(g_speech_sen, method = "syuzhet")
sentiment_vector
summary(sentiment_vector)
boxplot(sentiment_vector)
max(sentiment_vector)
sentence_sentiment = data.frame(g_speech_sen, sentiment_vector)
View(sentence_sentiment)
which.max(sentence_sentiment$sentiment_vector)
max(sentiment_vector)
sentence_sentiment = data.frame(g_speech_sen, sentiment_vector)
View(sentence_sentiment)
which.max(sentence_sentiment$sentiment_vector)
## we now have an index - what can we do with this?
most_positive = sentence_sentiment[which.max(sentence_sentiment$sentiment_vector),]
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 75)
douglass = read_file("assets/douglass.txt")
View(douglass)
library("RDSTK")
library("readr")
library("qdap")
library("syuzhet")
library("ggplot2")
library("dplyr")
douglass = read_file("assets/douglass.txt")
View(douglass)
g_scores = get_nrc_sentiment(douglass)
class(g_scores)
g_scores
g_polarity = g_scores[1,9:10]
g_sentiment = g_scores[1,1:8]
class(g_polarity)
g_polarity = data.matrix(g_polarity, rownames.force = TRUE)
barplot(g_polarity)
class(g_sentiment)
g_sentiment = data.matrix(g_sentiment, rownames.force = TRUE)
barplot(g_sentiment)
g_speech_sen = get_sentences(douglass)
g_speech_sen
sentiment_vector = get_sentiment(g_speech_sen, method = "syuzhet")
sentiment_vector
summary(sentiment_vector)
boxplot(sentiment_vector)
sentiment_vector = get_sentiment(g_speech_sen, method = "syuzhet")
max(sentiment_vector)
sentence_sentiment = data.frame(g_speech_sen, sentiment_vector)
View(sentence_sentiment)
which.max(sentence_sentiment$sentiment_vector)
## we now have an index - what can we do with this?
most_positive = sentence_sentiment[which.max(sentence_sentiment$sentiment_vector),]
library("devtools")
library("RColorBrewer")
library("tm")
library("SnowballC")
library("wordcloud")
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 75)
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 75)
getMethod(wordcloud)
tm_map(douglass, removeWords, stopwords ("english"))
install.packages("tm_map")
douglass = tm_map(douglass, removeWords, stopwords ("english"))
douglass <- tm_map(douglass, removeWords, stopwords ("english"))
text <- readLines(file("assets/douglass.txt"))
doug <- Corpus(VectorSource(text))
doug <- tm_map(doug, removeWords, stopwords ("english"))
wordcloud(doug, colors = c("red", "yellow", "green") , max.words = 75)
wordcloud(doug, colors = c("red", "yellow", "green") , max.words = 75)
wordcloud(douglass, colors = c("red", "yellow", "green") , max.words = 75)
